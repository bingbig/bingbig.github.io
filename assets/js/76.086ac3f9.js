(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{473:function(t,e,s){"use strict";s.r(e);var r=s(0),i=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("blockquote",[s("p",[t._v("来源："),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/24269134",target:"_blank",rel:"noopener noreferrer"}},[t._v("source"),s("OutboundLink")],1)])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("原始定义：Software entities (classes, modules, functions) should be open for extension but closed for modification。")]),t._v(" "),s("p",[t._v("字面翻译：软件实体（包括类、模块、功能等）应该对扩展开放，但是对修改关闭。")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("一般情况，我们接到需求变更的通知，通常方式可能就是修改模块的源代码，然而修改已经存在的源代码是存在很大风险的，尤其是项目上线运行一段时间后，开发人员发生变化，这种风险可能就更大。所以，为了避免这种风险，在面对需求变更时，我们一般不修改源代码，即所谓的对修改关闭。不允许修改源代码，我们如何应对需求变更呢？答案就是我们下面要说的对扩展开放。")]),t._v(" "),t._m(7)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"开闭原则ocp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开闭原则ocp","aria-hidden":"true"}},[this._v("#")]),this._v(" 开闭原则OCP")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1、官方定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、官方定义","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、官方定义")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("开闭原则，英文缩写"),e("strong",[this._v("OCP")]),this._v("，全称"),e("code",[this._v("Open Closed Principle")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_2、自己理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、自己理解","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、自己理解")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-1、原理解释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、原理解释","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("2.1、原理解释")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("对扩展开放。模块对扩展开放，就意味着需求变化时，可以对模块扩展，使其具有满足那些改变的新行为。换句话说，模块通过扩展的方式去应对需求的变化。")])]),this._v(" "),e("li",[e("p",[this._v("对修改关闭。模块对修改关闭，表示当需求变化时，关闭对模块源代码的修改，当然这里的“关闭”应该是尽可能不修改的意思，也就是说，"),e("em",[this._v("应该尽量在不修改源代码的基础上面扩展组件")]),this._v("。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-2、为什么要“开”和“闭”"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、为什么要“开”和“闭”","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("2.2、为什么要“开”和“闭”")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("通过扩展去应对需求变化，就要求我们必须要面向接口编程，或者说面向抽象编程。所有参数类型、引用传递的对象必须使用抽象（接口或者抽象类）的方式定义，不能使用实现类的方式定义；通过抽象去界定扩展，比如我们定义了一个接口A的参数，那么我们的扩展只能是接口A的实现类。"),e("strong",[this._v("总的来说，开闭原则提高系统的可维护性和代码的重用性。")])])}],!1,null,null,null);i.options.__file="OCP.md";e.default=i.exports}}]);