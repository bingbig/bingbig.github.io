(window.webpackJsonp=window.webpackJsonp||[]).push([[239],{313:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"redis内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis内存管理","aria-hidden":"true"}},[s._v("#")]),s._v(" Redis内存管理")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v('/* zmalloc - total amount of allocated memory aware version of malloc()\n *\n * Copyright (c) 2009-2010, Salvatore Sanfilippo <antirez at gmail dot com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *   * Redistributions of source code must retain the above copyright notice,\n *     this list of conditions and the following disclaimer.\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n *   * Neither the name of Redis nor the names of its contributors may be used\n *     to endorse or promote products derived from this software without\n *     specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */')]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" __ZMALLOC_H")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __ZMALLOC_H")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("/* Double expansion needed for stringification of macro values. */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __xstr(s) __str(s)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __str(s) #s")]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(USE_TCMALLOC)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(' ZMALLOC_LIB ("tcmalloc-" __xstr(TC_VERSION_MAJOR) "." __xstr(TC_VERSION_MINOR))')]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<google/tcmalloc.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" (TC_VERSION_MAJOR == 1 && TC_VERSION_MINOR >= 6) || (TC_VERSION_MAJOR > 1)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" HAVE_MALLOC_SIZE 1")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" zmalloc_size(p) tc_malloc_size(p)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("error")]),s._v(' "Newer version of tcmalloc required"')]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" defined(USE_JEMALLOC)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(' ZMALLOC_LIB ("jemalloc-" __xstr(JEMALLOC_VERSION_MAJOR) "." __xstr(JEMALLOC_VERSION_MINOR) "." __xstr(JEMALLOC_VERSION_BUGFIX))')]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<jemalloc/jemalloc.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" (JEMALLOC_VERSION_MAJOR == 2 && JEMALLOC_VERSION_MINOR >= 1) || (JEMALLOC_VERSION_MAJOR > 2)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" HAVE_MALLOC_SIZE 1")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" zmalloc_size(p) je_malloc_usable_size(p)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("error")]),s._v(' "Newer version of jemalloc required"')]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" defined(__APPLE__)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<malloc/malloc.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" HAVE_MALLOC_SIZE 1")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" zmalloc_size(p) malloc_size(p)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" ZMALLOC_LIB")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(' ZMALLOC_LIB "libc"')]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __GLIBC__")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<malloc.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" HAVE_MALLOC_SIZE 1")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" zmalloc_size(p) malloc_usable_size(p)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("/* We can enable the Redis defrag capabilities only if we are using Jemalloc\n * and the version used is our special version modified for Redis having\n * the ability to return per-allocation fragmentation hints. */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(USE_JEMALLOC) && defined(JEMALLOC_FRAG_HINT)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" HAVE_DEFRAG")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zcalloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zrealloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zfree")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zstrdup")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("s"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_used_memory")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_set_oom_handler")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("oom_handler"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_rss")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_allocator_info")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("allocated"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("active"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("resident"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_private_dirty")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_smap_bytes_by_field")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("field"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_memory_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zlibc_free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" HAVE_DEFRAG")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zfree_no_tcache")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_no_tcache")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_usable")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" zmalloc_usable(p) zmalloc_size(p)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" REDIS_TEST")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_test")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")]),s._v(" ")]),a("span",{attrs:{class:"token comment"}},[s._v("/* __ZMALLOC_H */")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br")])]),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v('/* zmalloc - total amount of allocated memory aware version of malloc()\n *\n * Copyright (c) 2009-2010, Salvatore Sanfilippo <antirez at gmail dot com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *   * Redistributions of source code must retain the above copyright notice,\n *     this list of conditions and the following disclaimer.\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n *   * Neither the name of Redis nor the names of its contributors may be used\n *     to endorse or promote products derived from this software without\n *     specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */')]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<stdlib.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<stdint.h>")])]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("/* This function provide us access to the original libc free(). This is useful\n * for instance to free results obtained by backtrace_symbols(). We need\n * to define this function before including zmalloc.h that may shadow the\n * free implementation if we use jemalloc or another non standard allocator. */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zlibc_free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<string.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<pthread.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"config.h"')])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"zmalloc.h"')])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"atomicvar.h"')])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" PREFIX_SIZE (0)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(__sun) || defined(__sparc) || defined(__sparc__)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" PREFIX_SIZE (sizeof(long long))")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" PREFIX_SIZE (sizeof(size_t))")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("/* Explicitly override malloc/free etc when using tcmalloc. */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(USE_TCMALLOC)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" malloc(size) tc_malloc(size)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" calloc(count,size) tc_calloc(count,size)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" realloc(ptr,size) tc_realloc(ptr,size)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" free(ptr) tc_free(ptr)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" defined(USE_JEMALLOC)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" malloc(size) je_malloc(size)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" calloc(count,size) je_calloc(count,size)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" realloc(ptr,size) je_realloc(ptr,size)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" free(ptr) je_free(ptr)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" mallocx(size,flags) je_mallocx(size,flags)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" dallocx(ptr,flags) je_dallocx(ptr,flags)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" update_zmalloc_stat_alloc(__n) do { \\\n    size_t _n = (__n); \\\n    if (_n&(sizeof(long)-1)) _n += sizeof(long)-(_n&(sizeof(long)-1)); \\\n    atomicIncr(used_memory,__n); \\\n} while(0)")]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" update_zmalloc_stat_free(__n) do { \\\n    size_t _n = (__n); \\\n    if (_n&(sizeof(long)-1)) _n += sizeof(long)-(_n&(sizeof(long)-1)); \\\n    atomicDecr(used_memory,__n); \\\n} while(0)")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" size_t used_memory "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\npthread_mutex_t used_memory_mutex "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" PTHREAD_MUTEX_INITIALIZER"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_default_oom")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("fprintf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token constant"}},[s._v("stderr")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"zmalloc: Out of memory trying to allocate %zu bytes\\n"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("fflush")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token constant"}},[s._v("stderr")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("abort")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("zmalloc_oom_handler"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" zmalloc_default_oom"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("/*\n * alloca是向栈申请内存,因此无需释放.\n * malloc分配的内存是位于堆中的,并且没有初始化内存的内容,因此基本上malloc之后,调用函数memset来初始化这部分的内存空间.\n * calloc则将初始化这部分的内存,设置为0.\n * realloc则对malloc申请的内存进行大小的调整.\n * */")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("malloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_oom_handler")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_alloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_alloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ptr"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("/* Allocation and free functions that bypass the thread cache\n * and go straight to the allocator arena bins.\n * Currently implemented only for jemalloc. Used for online defragmentation. */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" HAVE_DEFRAG")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_no_tcache")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("mallocx")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" MALLOCX_TCACHE_NONE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_oom_handler")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_alloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zfree_no_tcache")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("dallocx")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" MALLOCX_TCACHE_NONE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zcalloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("calloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" size"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_oom_handler")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_alloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_alloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ptr"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zrealloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" size_t size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("realptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n    size_t oldsize"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("newptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\n    oldsize "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    newptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("realloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("newptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_oom_handler")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldsize"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_alloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" newptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    realptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ptr"),a("span",{attrs:{class:"token operator"}},[s._v("-")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    oldsize "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("realptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    newptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("realloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("realptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("size"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("newptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_oom_handler")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("newptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldsize"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_alloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("newptr"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("/* Provide zmalloc_size() for systems where this function is not provided by\n * malloc itself, given that in that case we store a header with this\n * information as the first bytes of every allocation. */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("realptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ptr"),a("span",{attrs:{class:"token operator"}},[s._v("-")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t size "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("realptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Assume at least that all the allocations are padded at sizeof(long) by\n     * the underlying allocator. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token operator"}},[s._v("&")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v("-")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" size "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v("-")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token operator"}},[s._v("&")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v("-")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" size"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_usable")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v("-")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zfree")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("realptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t oldsize"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" HAVE_MALLOC_SIZE")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    realptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ptr"),a("span",{attrs:{class:"token operator"}},[s._v("-")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    oldsize "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("realptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("update_zmalloc_stat_free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldsize"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("PREFIX_SIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("free")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("realptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token function"}},[s._v("zstrdup")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("s"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    size_t l "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("strlen")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v("+")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token function"}},[s._v("memcpy")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("l"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" p"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_used_memory")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    size_t um"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("atomicGet")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("used_memory"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("um"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" um"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_set_oom_handler")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("oom_handler"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    zmalloc_oom_handler "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" oom_handler"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v('/* Get the RSS information in an OS-specific way.\n *\n * WARNING: the function zmalloc_get_rss() is not designed to be fast\n * and may not be called in the busy loops where Redis tries to release\n * memory expiring or swapping out objects.\n *\n * For this kind of "fast RSS reporting" usages use instead the\n * function RedisEstimateRSS() that is a much faster (and less precise)\n * version of the function. */')]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(HAVE_PROC_STAT)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<sys/stat.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<fcntl.h>")])]),s._v("\n\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_rss")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" page "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sysconf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_SC_PAGESIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t rss"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" buf"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("4096")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" filename"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("256")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" count"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("x"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token function"}},[s._v("snprintf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filename"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token number"}},[s._v("256")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token string"}},[s._v('"/proc/%d/stat"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token function"}},[s._v("getpid")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("open")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filename"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("O_RDONLY"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("-")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("read")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("buf"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token number"}},[s._v("4096")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token function"}},[s._v("close")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("close")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    p "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" buf"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    count "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("23")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* RSS is the 24th field in /proc/<pid>/stat */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("while")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" count"),a("span",{attrs:{class:"token operator"}},[s._v("--")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        p "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("strchr")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token string"}},[s._v("' '")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" p"),a("span",{attrs:{class:"token operator"}},[s._v("++")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("p"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    x "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("strchr")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token string"}},[s._v("' '")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("x"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("x "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'\\0'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    rss "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("strtoll")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    rss "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" page"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" rss"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" defined(HAVE_TASKINFO)")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<stdlib.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<sys/sysctl.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<mach/task.h>")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("<mach/mach_init.h>")])]),s._v("\n\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_rss")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    task_t task "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" MACH_PORT_NULL"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" task_basic_info t_info"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    mach_msg_type_number_t t_info_count "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" TASK_BASIC_INFO_COUNT"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("task_for_pid")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("current_task")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("getpid")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("task"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" KERN_SUCCESS"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("task_info")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TASK_BASIC_INFO"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task_info_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("t_info"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("t_info_count"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" t_info"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("resident_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_rss")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* If we can't get the RSS in an OS-specific way for this system just\n     * return the memory usage we estimated in zmalloc()..\n     *\n     * Fragmentation will appear to be always 1 (no fragmentation)\n     * of course... */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_used_memory")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(USE_JEMALLOC)")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_allocator_info")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("allocated"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                               size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("active"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                               size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("resident"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    uint64_t epoch "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t sz"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("allocated "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("resident "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("active "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Update the statistics cached by mallctl. */")]),s._v("\n    sz "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("epoch"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("je_mallctl")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"epoch"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("epoch"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("sz"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("epoch"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sz"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    sz "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unlike RSS, this does not include RSS from shared libraries and other non\n     * heap mappings. */")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("je_mallctl")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"stats.resident"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" resident"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("sz"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unlike resident, this doesn't not include the pages jemalloc reserves\n     * for re-use (purge will clean that). */")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("je_mallctl")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"stats.active"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" active"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("sz"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unlike zmalloc_used_memory, this matches the stats.resident by taking\n     * into account all allocations done by this process (not only zmalloc). */")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("je_mallctl")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"stats.allocated"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" allocated"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("sz"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_allocator_info")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("allocated"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                               size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("active"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                               size_t "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("resident"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("allocated "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("resident "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("active "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v('/* Get the sum of the specified field (converted form kb to bytes) in\n * /proc/self/smaps. The field must be specified with trailing ":" as it\n * apperas in the smaps output.\n *\n * If a pid is specified, the information is extracted for such a pid,\n * otherwise if pid is -1 the information is reported is about the\n * current process.\n *\n * Example: zmalloc_get_smap_bytes_by_field("Rss:",-1);\n */')]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(HAVE_PROC_SMAPS)")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_smap_bytes_by_field")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("field"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" line"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("1024")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t bytes "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flen "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("strlen")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("field"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    FILE "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("fp"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pid "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("-")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        fp "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("fopen")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"/proc/self/smaps"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token string"}},[s._v('"r"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" filename"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("128")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{attrs:{class:"token function"}},[s._v("snprintf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filename"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filename"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token string"}},[s._v('"/proc/%ld/smaps"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        fp "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("fopen")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filename"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token string"}},[s._v('"r"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("fp"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("while")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("fgets")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("fp"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("strncmp")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("field"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("flen"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("strchr")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token string"}},[s._v("'k'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'\\0'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                bytes "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("strtol")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("flen"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1024")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("fclose")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fp"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_smap_bytes_by_field")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("field"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" field"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_private_dirty")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_smap_bytes_by_field")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"Private_Dirty:"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("/* Returns the size of physical memory (RAM) in bytes.\n * It looks ugly, but this is the cleanest way to achieve cross platform results.\n * Cleaned up from:\n *\n * http://nadeausoftware.com/articles/2012/09/c_c_tip_how_get_physical_memory_size_system\n *\n * Note that this function:\n * 1) Was released under the following CC attribution license:\n *    http://creativecommons.org/licenses/by/3.0/deed.en_US.\n * 2) Was originally implemented by David Robert Nadeau.\n * 3) Was modified for Redis by Matt Stancliff.\n * 4) This note exists in order to comply with the original license.\n */")]),s._v("\nsize_t "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_get_memory_size")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(__unix__) || defined(__unix) || defined(unix) || \\\n    (defined(__APPLE__) && defined(__MACH__))")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(CTL_HW) && (defined(HW_MEMSIZE) || defined(HW_PHYSMEM64))")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mib"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("2")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    mib"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" CTL_HW"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(HW_MEMSIZE)")]),s._v("\n    mib"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" HW_MEMSIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* OSX. --------------------- */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" defined(HW_PHYSMEM64)")]),s._v("\n    mib"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" HW_PHYSMEM64"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* NetBSD, OpenBSD. --------- */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n    int64_t size "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),a("span",{attrs:{class:"token comment"}},[s._v("/* 64-bit */")]),s._v("\n    size_t len "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("sysctl")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" mib"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("2")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("len"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0L")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Failed? */")]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" defined(_SC_PHYS_PAGES) && defined(_SC_PAGESIZE)")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* FreeBSD, Linux, OpenBSD, and Solaris. -------------------- */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token function"}},[s._v("sysconf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_SC_PHYS_PAGES"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token function"}},[s._v("sysconf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_SC_PAGESIZE"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" defined(CTL_HW) && (defined(HW_PHYSMEM) || defined(HW_REALMEM))")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* DragonFly BSD, FreeBSD, NetBSD, OpenBSD, and OSX. -------- */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mib"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("2")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    mib"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" CTL_HW"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" defined(HW_REALMEM)")]),s._v("\n    mib"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" HW_REALMEM"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* FreeBSD. ----------------- */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" defined(HW_PHYSMEM)")]),s._v("\n    mib"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" HW_PHYSMEM"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* Others. ------------------ */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" size "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* 32-bit */")]),s._v("\n    size_t len "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("sysctl")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mib"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("2")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("len"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size_t"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0L")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Failed? */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0L")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unknown method to get the data. */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0L")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unknown OS. */")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" REDIS_TEST")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" UNUSED(x) ((void)(x))")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_test")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token function"}},[s._v("UNUSED")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("argc"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("UNUSED")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("argv"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"Initial used memory: %zu\\n"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_used_memory")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    ptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token number"}},[s._v("123")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"Allocated 123 bytes; used: %zu\\n"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_used_memory")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    ptr "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zrealloc")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("456")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"Reallocated to 456 bytes; used: %zu\\n"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_used_memory")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("zfree")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"Freed pointer; used: %zu\\n"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("zmalloc_used_memory")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token macro property"}},[s._v("#"),a("span",{attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br"),a("span",{staticClass:"line-number"},[s._v("155")]),a("br"),a("span",{staticClass:"line-number"},[s._v("156")]),a("br"),a("span",{staticClass:"line-number"},[s._v("157")]),a("br"),a("span",{staticClass:"line-number"},[s._v("158")]),a("br"),a("span",{staticClass:"line-number"},[s._v("159")]),a("br"),a("span",{staticClass:"line-number"},[s._v("160")]),a("br"),a("span",{staticClass:"line-number"},[s._v("161")]),a("br"),a("span",{staticClass:"line-number"},[s._v("162")]),a("br"),a("span",{staticClass:"line-number"},[s._v("163")]),a("br"),a("span",{staticClass:"line-number"},[s._v("164")]),a("br"),a("span",{staticClass:"line-number"},[s._v("165")]),a("br"),a("span",{staticClass:"line-number"},[s._v("166")]),a("br"),a("span",{staticClass:"line-number"},[s._v("167")]),a("br"),a("span",{staticClass:"line-number"},[s._v("168")]),a("br"),a("span",{staticClass:"line-number"},[s._v("169")]),a("br"),a("span",{staticClass:"line-number"},[s._v("170")]),a("br"),a("span",{staticClass:"line-number"},[s._v("171")]),a("br"),a("span",{staticClass:"line-number"},[s._v("172")]),a("br"),a("span",{staticClass:"line-number"},[s._v("173")]),a("br"),a("span",{staticClass:"line-number"},[s._v("174")]),a("br"),a("span",{staticClass:"line-number"},[s._v("175")]),a("br"),a("span",{staticClass:"line-number"},[s._v("176")]),a("br"),a("span",{staticClass:"line-number"},[s._v("177")]),a("br"),a("span",{staticClass:"line-number"},[s._v("178")]),a("br"),a("span",{staticClass:"line-number"},[s._v("179")]),a("br"),a("span",{staticClass:"line-number"},[s._v("180")]),a("br"),a("span",{staticClass:"line-number"},[s._v("181")]),a("br"),a("span",{staticClass:"line-number"},[s._v("182")]),a("br"),a("span",{staticClass:"line-number"},[s._v("183")]),a("br"),a("span",{staticClass:"line-number"},[s._v("184")]),a("br"),a("span",{staticClass:"line-number"},[s._v("185")]),a("br"),a("span",{staticClass:"line-number"},[s._v("186")]),a("br"),a("span",{staticClass:"line-number"},[s._v("187")]),a("br"),a("span",{staticClass:"line-number"},[s._v("188")]),a("br"),a("span",{staticClass:"line-number"},[s._v("189")]),a("br"),a("span",{staticClass:"line-number"},[s._v("190")]),a("br"),a("span",{staticClass:"line-number"},[s._v("191")]),a("br"),a("span",{staticClass:"line-number"},[s._v("192")]),a("br"),a("span",{staticClass:"line-number"},[s._v("193")]),a("br"),a("span",{staticClass:"line-number"},[s._v("194")]),a("br"),a("span",{staticClass:"line-number"},[s._v("195")]),a("br"),a("span",{staticClass:"line-number"},[s._v("196")]),a("br"),a("span",{staticClass:"line-number"},[s._v("197")]),a("br"),a("span",{staticClass:"line-number"},[s._v("198")]),a("br"),a("span",{staticClass:"line-number"},[s._v("199")]),a("br"),a("span",{staticClass:"line-number"},[s._v("200")]),a("br"),a("span",{staticClass:"line-number"},[s._v("201")]),a("br"),a("span",{staticClass:"line-number"},[s._v("202")]),a("br"),a("span",{staticClass:"line-number"},[s._v("203")]),a("br"),a("span",{staticClass:"line-number"},[s._v("204")]),a("br"),a("span",{staticClass:"line-number"},[s._v("205")]),a("br"),a("span",{staticClass:"line-number"},[s._v("206")]),a("br"),a("span",{staticClass:"line-number"},[s._v("207")]),a("br"),a("span",{staticClass:"line-number"},[s._v("208")]),a("br"),a("span",{staticClass:"line-number"},[s._v("209")]),a("br"),a("span",{staticClass:"line-number"},[s._v("210")]),a("br"),a("span",{staticClass:"line-number"},[s._v("211")]),a("br"),a("span",{staticClass:"line-number"},[s._v("212")]),a("br"),a("span",{staticClass:"line-number"},[s._v("213")]),a("br"),a("span",{staticClass:"line-number"},[s._v("214")]),a("br"),a("span",{staticClass:"line-number"},[s._v("215")]),a("br"),a("span",{staticClass:"line-number"},[s._v("216")]),a("br"),a("span",{staticClass:"line-number"},[s._v("217")]),a("br"),a("span",{staticClass:"line-number"},[s._v("218")]),a("br"),a("span",{staticClass:"line-number"},[s._v("219")]),a("br"),a("span",{staticClass:"line-number"},[s._v("220")]),a("br"),a("span",{staticClass:"line-number"},[s._v("221")]),a("br"),a("span",{staticClass:"line-number"},[s._v("222")]),a("br"),a("span",{staticClass:"line-number"},[s._v("223")]),a("br"),a("span",{staticClass:"line-number"},[s._v("224")]),a("br"),a("span",{staticClass:"line-number"},[s._v("225")]),a("br"),a("span",{staticClass:"line-number"},[s._v("226")]),a("br"),a("span",{staticClass:"line-number"},[s._v("227")]),a("br"),a("span",{staticClass:"line-number"},[s._v("228")]),a("br"),a("span",{staticClass:"line-number"},[s._v("229")]),a("br"),a("span",{staticClass:"line-number"},[s._v("230")]),a("br"),a("span",{staticClass:"line-number"},[s._v("231")]),a("br"),a("span",{staticClass:"line-number"},[s._v("232")]),a("br"),a("span",{staticClass:"line-number"},[s._v("233")]),a("br"),a("span",{staticClass:"line-number"},[s._v("234")]),a("br"),a("span",{staticClass:"line-number"},[s._v("235")]),a("br"),a("span",{staticClass:"line-number"},[s._v("236")]),a("br"),a("span",{staticClass:"line-number"},[s._v("237")]),a("br"),a("span",{staticClass:"line-number"},[s._v("238")]),a("br"),a("span",{staticClass:"line-number"},[s._v("239")]),a("br"),a("span",{staticClass:"line-number"},[s._v("240")]),a("br"),a("span",{staticClass:"line-number"},[s._v("241")]),a("br"),a("span",{staticClass:"line-number"},[s._v("242")]),a("br"),a("span",{staticClass:"line-number"},[s._v("243")]),a("br"),a("span",{staticClass:"line-number"},[s._v("244")]),a("br"),a("span",{staticClass:"line-number"},[s._v("245")]),a("br"),a("span",{staticClass:"line-number"},[s._v("246")]),a("br"),a("span",{staticClass:"line-number"},[s._v("247")]),a("br"),a("span",{staticClass:"line-number"},[s._v("248")]),a("br"),a("span",{staticClass:"line-number"},[s._v("249")]),a("br"),a("span",{staticClass:"line-number"},[s._v("250")]),a("br"),a("span",{staticClass:"line-number"},[s._v("251")]),a("br"),a("span",{staticClass:"line-number"},[s._v("252")]),a("br"),a("span",{staticClass:"line-number"},[s._v("253")]),a("br"),a("span",{staticClass:"line-number"},[s._v("254")]),a("br"),a("span",{staticClass:"line-number"},[s._v("255")]),a("br"),a("span",{staticClass:"line-number"},[s._v("256")]),a("br"),a("span",{staticClass:"line-number"},[s._v("257")]),a("br"),a("span",{staticClass:"line-number"},[s._v("258")]),a("br"),a("span",{staticClass:"line-number"},[s._v("259")]),a("br"),a("span",{staticClass:"line-number"},[s._v("260")]),a("br"),a("span",{staticClass:"line-number"},[s._v("261")]),a("br"),a("span",{staticClass:"line-number"},[s._v("262")]),a("br"),a("span",{staticClass:"line-number"},[s._v("263")]),a("br"),a("span",{staticClass:"line-number"},[s._v("264")]),a("br"),a("span",{staticClass:"line-number"},[s._v("265")]),a("br"),a("span",{staticClass:"line-number"},[s._v("266")]),a("br"),a("span",{staticClass:"line-number"},[s._v("267")]),a("br"),a("span",{staticClass:"line-number"},[s._v("268")]),a("br"),a("span",{staticClass:"line-number"},[s._v("269")]),a("br"),a("span",{staticClass:"line-number"},[s._v("270")]),a("br"),a("span",{staticClass:"line-number"},[s._v("271")]),a("br"),a("span",{staticClass:"line-number"},[s._v("272")]),a("br"),a("span",{staticClass:"line-number"},[s._v("273")]),a("br"),a("span",{staticClass:"line-number"},[s._v("274")]),a("br"),a("span",{staticClass:"line-number"},[s._v("275")]),a("br"),a("span",{staticClass:"line-number"},[s._v("276")]),a("br"),a("span",{staticClass:"line-number"},[s._v("277")]),a("br"),a("span",{staticClass:"line-number"},[s._v("278")]),a("br"),a("span",{staticClass:"line-number"},[s._v("279")]),a("br"),a("span",{staticClass:"line-number"},[s._v("280")]),a("br"),a("span",{staticClass:"line-number"},[s._v("281")]),a("br"),a("span",{staticClass:"line-number"},[s._v("282")]),a("br"),a("span",{staticClass:"line-number"},[s._v("283")]),a("br"),a("span",{staticClass:"line-number"},[s._v("284")]),a("br"),a("span",{staticClass:"line-number"},[s._v("285")]),a("br"),a("span",{staticClass:"line-number"},[s._v("286")]),a("br"),a("span",{staticClass:"line-number"},[s._v("287")]),a("br"),a("span",{staticClass:"line-number"},[s._v("288")]),a("br"),a("span",{staticClass:"line-number"},[s._v("289")]),a("br"),a("span",{staticClass:"line-number"},[s._v("290")]),a("br"),a("span",{staticClass:"line-number"},[s._v("291")]),a("br"),a("span",{staticClass:"line-number"},[s._v("292")]),a("br"),a("span",{staticClass:"line-number"},[s._v("293")]),a("br"),a("span",{staticClass:"line-number"},[s._v("294")]),a("br"),a("span",{staticClass:"line-number"},[s._v("295")]),a("br"),a("span",{staticClass:"line-number"},[s._v("296")]),a("br"),a("span",{staticClass:"line-number"},[s._v("297")]),a("br"),a("span",{staticClass:"line-number"},[s._v("298")]),a("br"),a("span",{staticClass:"line-number"},[s._v("299")]),a("br"),a("span",{staticClass:"line-number"},[s._v("300")]),a("br"),a("span",{staticClass:"line-number"},[s._v("301")]),a("br"),a("span",{staticClass:"line-number"},[s._v("302")]),a("br"),a("span",{staticClass:"line-number"},[s._v("303")]),a("br"),a("span",{staticClass:"line-number"},[s._v("304")]),a("br"),a("span",{staticClass:"line-number"},[s._v("305")]),a("br"),a("span",{staticClass:"line-number"},[s._v("306")]),a("br"),a("span",{staticClass:"line-number"},[s._v("307")]),a("br"),a("span",{staticClass:"line-number"},[s._v("308")]),a("br"),a("span",{staticClass:"line-number"},[s._v("309")]),a("br"),a("span",{staticClass:"line-number"},[s._v("310")]),a("br"),a("span",{staticClass:"line-number"},[s._v("311")]),a("br"),a("span",{staticClass:"line-number"},[s._v("312")]),a("br"),a("span",{staticClass:"line-number"},[s._v("313")]),a("br"),a("span",{staticClass:"line-number"},[s._v("314")]),a("br"),a("span",{staticClass:"line-number"},[s._v("315")]),a("br"),a("span",{staticClass:"line-number"},[s._v("316")]),a("br"),a("span",{staticClass:"line-number"},[s._v("317")]),a("br"),a("span",{staticClass:"line-number"},[s._v("318")]),a("br"),a("span",{staticClass:"line-number"},[s._v("319")]),a("br"),a("span",{staticClass:"line-number"},[s._v("320")]),a("br"),a("span",{staticClass:"line-number"},[s._v("321")]),a("br"),a("span",{staticClass:"line-number"},[s._v("322")]),a("br"),a("span",{staticClass:"line-number"},[s._v("323")]),a("br"),a("span",{staticClass:"line-number"},[s._v("324")]),a("br"),a("span",{staticClass:"line-number"},[s._v("325")]),a("br"),a("span",{staticClass:"line-number"},[s._v("326")]),a("br"),a("span",{staticClass:"line-number"},[s._v("327")]),a("br"),a("span",{staticClass:"line-number"},[s._v("328")]),a("br"),a("span",{staticClass:"line-number"},[s._v("329")]),a("br"),a("span",{staticClass:"line-number"},[s._v("330")]),a("br"),a("span",{staticClass:"line-number"},[s._v("331")]),a("br"),a("span",{staticClass:"line-number"},[s._v("332")]),a("br"),a("span",{staticClass:"line-number"},[s._v("333")]),a("br"),a("span",{staticClass:"line-number"},[s._v("334")]),a("br"),a("span",{staticClass:"line-number"},[s._v("335")]),a("br"),a("span",{staticClass:"line-number"},[s._v("336")]),a("br"),a("span",{staticClass:"line-number"},[s._v("337")]),a("br"),a("span",{staticClass:"line-number"},[s._v("338")]),a("br"),a("span",{staticClass:"line-number"},[s._v("339")]),a("br"),a("span",{staticClass:"line-number"},[s._v("340")]),a("br"),a("span",{staticClass:"line-number"},[s._v("341")]),a("br"),a("span",{staticClass:"line-number"},[s._v("342")]),a("br"),a("span",{staticClass:"line-number"},[s._v("343")]),a("br"),a("span",{staticClass:"line-number"},[s._v("344")]),a("br"),a("span",{staticClass:"line-number"},[s._v("345")]),a("br"),a("span",{staticClass:"line-number"},[s._v("346")]),a("br"),a("span",{staticClass:"line-number"},[s._v("347")]),a("br"),a("span",{staticClass:"line-number"},[s._v("348")]),a("br"),a("span",{staticClass:"line-number"},[s._v("349")]),a("br"),a("span",{staticClass:"line-number"},[s._v("350")]),a("br"),a("span",{staticClass:"line-number"},[s._v("351")]),a("br"),a("span",{staticClass:"line-number"},[s._v("352")]),a("br"),a("span",{staticClass:"line-number"},[s._v("353")]),a("br"),a("span",{staticClass:"line-number"},[s._v("354")]),a("br"),a("span",{staticClass:"line-number"},[s._v("355")]),a("br"),a("span",{staticClass:"line-number"},[s._v("356")]),a("br"),a("span",{staticClass:"line-number"},[s._v("357")]),a("br"),a("span",{staticClass:"line-number"},[s._v("358")]),a("br"),a("span",{staticClass:"line-number"},[s._v("359")]),a("br"),a("span",{staticClass:"line-number"},[s._v("360")]),a("br"),a("span",{staticClass:"line-number"},[s._v("361")]),a("br"),a("span",{staticClass:"line-number"},[s._v("362")]),a("br"),a("span",{staticClass:"line-number"},[s._v("363")]),a("br"),a("span",{staticClass:"line-number"},[s._v("364")]),a("br"),a("span",{staticClass:"line-number"},[s._v("365")]),a("br"),a("span",{staticClass:"line-number"},[s._v("366")]),a("br"),a("span",{staticClass:"line-number"},[s._v("367")]),a("br"),a("span",{staticClass:"line-number"},[s._v("368")]),a("br"),a("span",{staticClass:"line-number"},[s._v("369")]),a("br"),a("span",{staticClass:"line-number"},[s._v("370")]),a("br"),a("span",{staticClass:"line-number"},[s._v("371")]),a("br"),a("span",{staticClass:"line-number"},[s._v("372")]),a("br"),a("span",{staticClass:"line-number"},[s._v("373")]),a("br"),a("span",{staticClass:"line-number"},[s._v("374")]),a("br"),a("span",{staticClass:"line-number"},[s._v("375")]),a("br"),a("span",{staticClass:"line-number"},[s._v("376")]),a("br"),a("span",{staticClass:"line-number"},[s._v("377")]),a("br"),a("span",{staticClass:"line-number"},[s._v("378")]),a("br"),a("span",{staticClass:"line-number"},[s._v("379")]),a("br"),a("span",{staticClass:"line-number"},[s._v("380")]),a("br"),a("span",{staticClass:"line-number"},[s._v("381")]),a("br"),a("span",{staticClass:"line-number"},[s._v("382")]),a("br"),a("span",{staticClass:"line-number"},[s._v("383")]),a("br"),a("span",{staticClass:"line-number"},[s._v("384")]),a("br"),a("span",{staticClass:"line-number"},[s._v("385")]),a("br"),a("span",{staticClass:"line-number"},[s._v("386")]),a("br"),a("span",{staticClass:"line-number"},[s._v("387")]),a("br"),a("span",{staticClass:"line-number"},[s._v("388")]),a("br"),a("span",{staticClass:"line-number"},[s._v("389")]),a("br"),a("span",{staticClass:"line-number"},[s._v("390")]),a("br"),a("span",{staticClass:"line-number"},[s._v("391")]),a("br"),a("span",{staticClass:"line-number"},[s._v("392")]),a("br"),a("span",{staticClass:"line-number"},[s._v("393")]),a("br"),a("span",{staticClass:"line-number"},[s._v("394")]),a("br"),a("span",{staticClass:"line-number"},[s._v("395")]),a("br"),a("span",{staticClass:"line-number"},[s._v("396")]),a("br"),a("span",{staticClass:"line-number"},[s._v("397")]),a("br"),a("span",{staticClass:"line-number"},[s._v("398")]),a("br"),a("span",{staticClass:"line-number"},[s._v("399")]),a("br"),a("span",{staticClass:"line-number"},[s._v("400")]),a("br"),a("span",{staticClass:"line-number"},[s._v("401")]),a("br"),a("span",{staticClass:"line-number"},[s._v("402")]),a("br"),a("span",{staticClass:"line-number"},[s._v("403")]),a("br"),a("span",{staticClass:"line-number"},[s._v("404")]),a("br"),a("span",{staticClass:"line-number"},[s._v("405")]),a("br"),a("span",{staticClass:"line-number"},[s._v("406")]),a("br"),a("span",{staticClass:"line-number"},[s._v("407")]),a("br"),a("span",{staticClass:"line-number"},[s._v("408")]),a("br"),a("span",{staticClass:"line-number"},[s._v("409")]),a("br"),a("span",{staticClass:"line-number"},[s._v("410")]),a("br"),a("span",{staticClass:"line-number"},[s._v("411")]),a("br"),a("span",{staticClass:"line-number"},[s._v("412")]),a("br"),a("span",{staticClass:"line-number"},[s._v("413")]),a("br"),a("span",{staticClass:"line-number"},[s._v("414")]),a("br"),a("span",{staticClass:"line-number"},[s._v("415")]),a("br"),a("span",{staticClass:"line-number"},[s._v("416")]),a("br"),a("span",{staticClass:"line-number"},[s._v("417")]),a("br"),a("span",{staticClass:"line-number"},[s._v("418")]),a("br"),a("span",{staticClass:"line-number"},[s._v("419")]),a("br"),a("span",{staticClass:"line-number"},[s._v("420")]),a("br"),a("span",{staticClass:"line-number"},[s._v("421")]),a("br"),a("span",{staticClass:"line-number"},[s._v("422")]),a("br"),a("span",{staticClass:"line-number"},[s._v("423")]),a("br"),a("span",{staticClass:"line-number"},[s._v("424")]),a("br"),a("span",{staticClass:"line-number"},[s._v("425")]),a("br"),a("span",{staticClass:"line-number"},[s._v("426")]),a("br"),a("span",{staticClass:"line-number"},[s._v("427")]),a("br"),a("span",{staticClass:"line-number"},[s._v("428")]),a("br"),a("span",{staticClass:"line-number"},[s._v("429")]),a("br"),a("span",{staticClass:"line-number"},[s._v("430")]),a("br"),a("span",{staticClass:"line-number"},[s._v("431")]),a("br"),a("span",{staticClass:"line-number"},[s._v("432")]),a("br"),a("span",{staticClass:"line-number"},[s._v("433")]),a("br"),a("span",{staticClass:"line-number"},[s._v("434")]),a("br"),a("span",{staticClass:"line-number"},[s._v("435")]),a("br"),a("span",{staticClass:"line-number"},[s._v("436")]),a("br"),a("span",{staticClass:"line-number"},[s._v("437")]),a("br"),a("span",{staticClass:"line-number"},[s._v("438")]),a("br"),a("span",{staticClass:"line-number"},[s._v("439")]),a("br"),a("span",{staticClass:"line-number"},[s._v("440")]),a("br"),a("span",{staticClass:"line-number"},[s._v("441")]),a("br"),a("span",{staticClass:"line-number"},[s._v("442")]),a("br"),a("span",{staticClass:"line-number"},[s._v("443")]),a("br"),a("span",{staticClass:"line-number"},[s._v("444")]),a("br"),a("span",{staticClass:"line-number"},[s._v("445")]),a("br"),a("span",{staticClass:"line-number"},[s._v("446")]),a("br"),a("span",{staticClass:"line-number"},[s._v("447")]),a("br"),a("span",{staticClass:"line-number"},[s._v("448")]),a("br"),a("span",{staticClass:"line-number"},[s._v("449")]),a("br"),a("span",{staticClass:"line-number"},[s._v("450")]),a("br"),a("span",{staticClass:"line-number"},[s._v("451")]),a("br"),a("span",{staticClass:"line-number"},[s._v("452")]),a("br"),a("span",{staticClass:"line-number"},[s._v("453")]),a("br"),a("span",{staticClass:"line-number"},[s._v("454")]),a("br"),a("span",{staticClass:"line-number"},[s._v("455")]),a("br"),a("span",{staticClass:"line-number"},[s._v("456")]),a("br"),a("span",{staticClass:"line-number"},[s._v("457")]),a("br"),a("span",{staticClass:"line-number"},[s._v("458")]),a("br"),a("span",{staticClass:"line-number"},[s._v("459")]),a("br"),a("span",{staticClass:"line-number"},[s._v("460")]),a("br"),a("span",{staticClass:"line-number"},[s._v("461")]),a("br"),a("span",{staticClass:"line-number"},[s._v("462")]),a("br"),a("span",{staticClass:"line-number"},[s._v("463")]),a("br"),a("span",{staticClass:"line-number"},[s._v("464")]),a("br")])])])}],!1,null,null,null);e.options.__file="zmalloc.md";t.default=e.exports}}]);