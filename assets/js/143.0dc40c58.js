(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{373:function(_,t,v){"use strict";v.r(t);var e=v(0),r=Object(e.a)({},function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("div",{staticClass:"content"},[_._m(0),_._v(" "),v("p",[_._v("我们已经知道php变量在内核中其实是通过zval结构来实现的，也初步了解如何设置一个zval结构的类型和值。\n这一节我们将在前两节的基础上，彻底掌握对zval结构的操控，其间将引入很多超棒的新宏。")]),_._v(" "),_._m(1),_._v(" "),_._m(2),_._v(" "),_._m(3),_._v(" "),_._m(4),_._v(" "),_._m(5),_._v(" "),_._m(6),_._v(" "),v("p",[_._v("《抚琴居》上的一篇文章说这项特性将会在你仅仅需要创建一个变量并将其指向一个已经由 Zend 内部数据内存时变得很有用。")]),_._v(" "),_._m(7),_._v(" "),_._m(8),_._v(" "),_._m(9),_._v(" "),_._m(10),_._v(" "),_._m(11),_._v(" "),v("ul",[v("li",[v("router-link",{attrs:{to:"./preface.html"}},[_._v("目录")])],1),_._v(" "),v("li",[_._v("2.2 "),v("router-link",{attrs:{to:"./2.2.html"}},[_._v("变量的值")])],1),_._v(" "),v("li",[_._v("2.4 "),v("router-link",{attrs:{to:"./2.4.html"}},[_._v("变量的存储方式")])],1)])])},[function(){var _=this.$createElement,t=this._self._c||_;return t("h1",{attrs:{id:"_2-3-创建php变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-创建php变量","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.3 创建PHP变量")])},function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("p",[_._v("在code的时候，很希望在内核中创建的zval可以让用户在PHP语言里以变量的形式使用，为了实现这个功能，\n我们首先要创建一个zval。最容易想到的办法便是创建一个zval指针，\n然后申请一块内存并让指针指向它。如果你脑海里浮现出了"),v("code",[_._v("malloc(sizeof(zval))")]),_._v("的影子，\n那么请你立即刹车，不要用malloc来做这件事情，内核给我们提供了相应的宏来处理这件事，\n理由和以前一样：为了代码漂亮并保持版本升级时的兼容性。\n这个宏是："),v("code",[_._v("MAKE_STD_ZVAL(pzv)")]),_._v("。这个宏会用内核的方式来申请一块内存并将其地址付给pzv，\n并初始化它的"),v("code",[_._v("refcount")]),_._v("和"),v("code",[_._v("is_ref")]),_._v("两个属性，更棒的是，它不但会自动的处理内存不足问题，\n还会在内存中选个最优的位置来申请。")])},function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("div",{staticClass:"tip custom-block"},[v("p",{staticClass:"custom-block-title"},[_._v("提示")]),_._v(" "),v("p",[_._v("除了"),v("code",[_._v("MAKE_STD_ZVAL()")]),_._v("宏函数，"),v("code",[_._v("ALLOC_INIT_ZVAL()")]),_._v("宏函数也是用来干这件事的，唯一的不同便是它会将pzv所指的zval的类型设置为"),v("code",[_._v("IS_NULL")]),_._v("。")])])},function(){var _=this.$createElement,t=this._self._c||_;return t("p",[this._v("申请完空间后，我们便可以给这个zval赋值了。基于已经介绍的宏，\n也许我们需要"),t("code",[this._v("Z_TYPE_P(p) = IS_NULL")]),this._v("来设置其是null类型，并用Z_SOMEVAL形式的宏来为它赋值，\n但是现在你有了更好更短的选择！")])},function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("p",[_._v("内核中提供一些宏来简化我们的操作，可以只用一步便设置好zval的类型和值。\n"),v("table",[v("tr",[v("td",[_._v("新宏")]),_._v(" "),v("td",[_._v("其它宏的实现方法")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_NULL(pvz); "),v("strong",[_._v("(注意这个Z和VAL之间没有下划线！)")])]),_._v(" "),v("td",[_._v("Z_TYPE_P(pzv) = IS_NULL;(IS_NULL型不用赋值，因为这个类型只有一个值就是null，^_^)")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_BOOL(pzv, b); "),v("strong",[_._v("(将pzv所指的zval设置为IS_BOOL类型，值是b)")])]),_._v(" "),v("td",[_._v("Z_TYPE_P(pzv) = IS_BOOL;"),v("br"),_._v("Z_BVAL_P(pzv) = b ? 1 : 0;")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_TRUE(pzv); "),v("strong",[_._v("(将pzv所指的zval设置为IS_BOOL类型，值是true)")])]),_._v(" "),v("td",[_._v("ZVAL_BOOL(pzv, 1);")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_FALSE(pzv); "),v("strong",[_._v("(将pzv所指的zval设置为IS_BOOL类型，值是false)")])]),_._v(" "),v("td",[_._v("ZVAL_BOOL(pzv, 0);")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_LONG(pzv, l);  "),v("strong",[_._v("(将pzv所指的zval设置为IS_LONG类型，值是l)")])]),_._v(" "),v("td",[_._v("Z_TYPE_P(pzv) = IS_LONG;"),v("br"),_._v("Z_LVAL_P(pzv) = l;")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_DOUBLE(pzv, d); "),v("strong",[_._v("(将pzv所指的zval设置为IS_DOUBLE类型，值是d)")])]),_._v(" "),v("td",[_._v("Z_TYPE_P(pzv) = IS_DOUBLE;"),v("br"),_._v("Z_DVAL_P(pzv) = d;")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_STRINGL(pzv,str,len,dup);"),v("strong",[_._v("(下面单独解释)")])]),_._v(" "),v("td",[_._v("Z_TYPE_P(pzv) = IS_STRING;"),v("br"),_._v("Z_STRLEN_P(pzv) = len;"),v("br"),_._v("if (dup) "),v("br"),_._v("{Z_STRVAL_P(pzv) =estrndup(str, len + 1);} "),v("br"),_._v("else"),v("br"),_._v(" {Z_STRVAL_P(pzv) = str;}")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_STRING(pzv, str, dup);")]),_._v(" "),v("td",[_._v("ZVAL_STRINGL(pzv, str,strlen(str), dup);")])]),_._v(" "),v("tr",[v("td",[_._v("ZVAL_RESOURCE(pzv, res);")]),_._v(" "),v("td",[_._v("Z_TYPE_P(pzv) = IS_RESOURCE;"),v("br"),_._v("Z_RESVAL_P(pzv) = res;")])])])])},function(){var _=this.$createElement,t=this._self._c||_;return t("h3",{attrs:{id:"zval-stringl-pzv-str-len-dup-中的dup参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zval-stringl-pzv-str-len-dup-中的dup参数","aria-hidden":"true"}},[this._v("#")]),this._v(" ZVAL_STRINGL(pzv,str,len,dup)中的dup参数")])},function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("p",[_._v("先阐述一下"),v("code",[_._v("ZVAL_STRINGL(pzv,str,len,dup);")]),_._v(" "),v("code",[_._v("str")]),_._v("和"),v("code",[_._v("len")]),_._v("两个参数很好理解，因为我们知道内核中保存了字符串的地址和它的长度，\n后面的"),v("code",[_._v("dup")]),_._v("的意思其实很简单，它指明了该字符串是否需要被复制。\n值为 1 将先申请一块新内存并赋值该字符串，然后把新内存的地址复制给pzv，\n为 0 时则是直接把str的地址赋值给zval。")])},function(){var _=this.$createElement,t=this._self._c||_;return t("h3",{attrs:{id:"zval-stringl与zval-string的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zval-stringl与zval-string的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" ZVAL_STRINGL与ZVAL_STRING的区别")])},function(){var _=this.$createElement,t=this._self._c||_;return t("p",[this._v("如果你想在某一位置截取该字符串或已经知道了这个字符串的长度，\n那么可以使用宏 "),t("code",[this._v("ZVAL_STRINGL(zval, string, length, duplicate)")]),this._v(" ，它显式的指定字符串长度，\n而不是使用"),t("code",[this._v("strlen()")]),this._v("。这个宏该字符串长度作为参数。但它是二进制安全的，而且速度也比ZVAL_STRING快，因为少了个strlen。")])},function(){var _=this.$createElement,t=this._self._c||_;return t("h3",{attrs:{id:"zval-resource约等于zval-long"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zval-resource约等于zval-long","aria-hidden":"true"}},[this._v("#")]),this._v(" ZVAL_RESOURCE约等于ZVAL_LONG")])},function(){var _=this.$createElement,t=this._self._c||_;return t("p",[this._v("上一节中我们说过PHP中的资源类型的值其实就是一个整数，所以"),t("code",[this._v("ZVAL_RESOURCE")]),this._v("和"),t("code",[this._v("ZVAL_LONG")]),this._v("的工作差不多，\n只不过它会把zval的类型设置为 "),t("code",[this._v("IS_RESOURCE")]),this._v("。")])},function(){var _=this.$createElement,t=this._self._c||_;return t("h2",{attrs:{id:"links"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#links","aria-hidden":"true"}},[this._v("#")]),this._v(" links")])}],!1,null,null,null);r.options.__file="2.3.md";t.default=r.exports}}]);