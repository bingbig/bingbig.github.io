(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{365:function(t,r,l){"use strict";l.r(r);var i=l(0),e=Object(i.a)({},function(){var t=this,r=t.$createElement,l=t._self._c||r;return l("div",{staticClass:"content"},[t._m(0),t._v(" "),l("ul",[l("li",[l("router-link",{attrs:{to:"./2.1.html"}},[t._v("1. 变量的类型")])],1),t._v(" "),l("li",[l("router-link",{attrs:{to:"./2.2.html"}},[t._v("2. 变量的值")])],1),t._v(" "),l("li",[l("router-link",{attrs:{to:"./2.3.html"}},[t._v("3. 创建PHP变量")])],1),t._v(" "),l("li",[l("router-link",{attrs:{to:"./2.4.html"}},[t._v("4. 变量的存储方式")])],1),t._v(" "),l("li",[l("router-link",{attrs:{to:"./2.5.html"}},[t._v("5. 变量的检索")])],1),t._v(" "),l("li",[l("router-link",{attrs:{to:"./2.6.html"}},[t._v("6. 类型转换")])],1),t._v(" "),l("li",[l("router-link",{attrs:{to:"./2.7.html"}},[t._v("7. 小结")])],1)]),t._v(" "),l("p",[t._v("所有的编程语言都要提供一种数据的存储与检索机制，PHP也不例外。其它语言大都需要在使用变量之前先定义，并且它的类型也是无法再次改变的，而PHP却允许程序猿自由的使用变量而无须提前定义，甚至可以随时随意的对已存在的变量转换成其它任何PHP支持的数据类型。在程序在运行的时候，PHP还会自动的根据需求转换变量的类型。")]),t._v(" "),l("p",[t._v("我认为阅读本书的人都已经是标准的PHP程序猿了，所以你们也肯定体验过PHP的弱类型的变量体系。众所周知，PHP引擎是用C写的，而C确实一种强类型的编程语言，PHP内核中是如何用C来实现自己的这种弱类型特性的，你将在本章中找到答案！")]),t._v(" "),t._m(1),t._v(" "),l("ul",[l("li",[l("router-link",{attrs:{to:"./preface.html"}},[t._v("目录")])],1),t._v(" "),l("li",[t._v("1.5 "),l("router-link",{attrs:{to:"./1.5.html"}},[t._v("小结")])],1),t._v(" "),l("li",[t._v("2.1 "),l("router-link",{attrs:{to:"./2.1.html"}},[t._v("变量的类型")])],1)])])},[function(){var t=this.$createElement,r=this._self._c||t;return r("h1",{attrs:{id:"_2-php变量在内核中的实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-php变量在内核中的实现","aria-hidden":"true"}},[this._v("#")]),this._v(" 2 PHP变量在内核中的实现")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"links"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#links","aria-hidden":"true"}},[this._v("#")]),this._v(" links")])}],!1,null,null,null);e.options.__file="2.md";r.default=e.exports}}]);