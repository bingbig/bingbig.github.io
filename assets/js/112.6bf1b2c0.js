(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{419:function(t,e,r){"use strict";r.r(e);var i=r(0),n=Object(i.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[r("p",[t._v("#小结")]),t._v(" "),r("p",[t._v("本章中你接触了一些基于流的I/O的内部表象. 下一章将演示做呢样实现自己的协议包装, 甚至是定义自己的流类型.")]),t._v(" "),t._m(0),t._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"./preface.html"}},[t._v("目录")])],1),t._v(" "),r("li",[t._v("14.3 "),r("router-link",{attrs:{to:"./14.3.html"}},[t._v("访问流")])],1),t._v(" "),r("li",[t._v("15 "),r("router-link",{attrs:{to:"./15.html"}},[t._v("实现流")])],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"links"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#links","aria-hidden":"true"}},[this._v("#")]),this._v(" links")])}],!1,null,null,null);n.options.__file="14.4.md";e.default=n.exports}}]);