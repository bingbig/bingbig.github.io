(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{403:function(t,e,r){"use strict";r.r(e);var s=r(0),i=Object(s.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p",[t._v("过滤器和上下文可以让普通的流类型行为被修改, 或通过INI设置影响整个请求, 而不需要直接的代码修改. 使用本章设计的计数, 你可以使你自己的包装器实现更加强大, 并且可以对其他包装器产生的数据进行改变.")]),t._v(" "),r("p",[t._v("接下来, 我们将离开PHPAPI背后的工作, 回到php构建系统的机制, 产生更加复杂的扩展链接到其他应用, 找到更加容易的方法, 使用工具集处理重复的工作.")]),t._v(" "),t._m(1),t._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"./preface.html"}},[t._v("目录")])],1),t._v(" "),r("li",[t._v("16.2 "),r("router-link",{attrs:{to:"./16.2.html"}},[t._v("过滤器")])],1),t._v(" "),r("li",[t._v("17 "),r("router-link",{attrs:{to:"./17.html"}},[t._v("配置和链接")])],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[this._v("#")]),this._v(" 小结")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"links"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#links","aria-hidden":"true"}},[this._v("#")]),this._v(" links")])}],!1,null,null,null);i.options.__file="16.3.md";e.default=i.exports}}]);