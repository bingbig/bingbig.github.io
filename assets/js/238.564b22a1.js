(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{315:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"全局变量server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局变量server","aria-hidden":"true"}},[s._v("#")]),s._v(" 全局变量"),a("code",[s._v("server")])]),s._v(" "),a("p",[s._v("头文件"),a("code",[s._v("server.h")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" redisServer "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* General */")]),s._v("\n    pid_t pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Main process pid. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("configfile"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{attrs:{class:"token comment"}},[s._v("/* Absolute config file path, or NULL */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("executable"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{attrs:{class:"token comment"}},[s._v("/* Absolute executable file path. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("exec_argv"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{attrs:{class:"token comment"}},[s._v("/* Executable argv vector (copy). */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hz"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                     "),a("span",{attrs:{class:"token comment"}},[s._v("/* serverCron() calls frequency in hertz */")]),s._v("\n    redisDb "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("db"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),a("span",{attrs:{class:"token comment"}},[s._v("/* 数组，保存这服务器所有的数据库 */")]),s._v("\n    dict "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("commands"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Command table */")]),s._v("\n    dict "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("orig_commands"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* Command table before command renaming. */")]),s._v("\n    aeEventLoop "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("el"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lruclock"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* Clock for LRU eviction */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shutdown_asap"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* SHUTDOWN needed ASAP */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" activerehashing"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* Incremental rehash in serverCron() */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" active_defrag_running"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Active defragmentation running (holds current scan aggressiveness) */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("requirepass"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Pass for AUTH command, or NULL */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("pidfile"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),a("span",{attrs:{class:"token comment"}},[s._v("/* PID file path */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" arch_bits"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),a("span",{attrs:{class:"token comment"}},[s._v("/* 32 or 64 depending on sizeof(long) */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cronloops"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of times the cron function run */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" runid"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONFIG_RUN_ID_SIZE"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* ID always different at every exec. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sentinel_mode"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* True if this instance is a Sentinel. */")]),s._v("\n    size_t initial_memory_usage"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Bytes used after initialization. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" always_show_logo"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* Show logo even for non-stdout logging. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Modules */")]),s._v("\n    dict "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("moduleapi"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* Exported APIs dictionary for modules. */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("loadmodule_queue"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* List of modules to load at startup. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" module_blocked_pipe"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("2")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Pipe used to awake the event loop if a\n                                   client blocked on a module command needs\n                                   to be processed. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Networking */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" port"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),a("span",{attrs:{class:"token comment"}},[s._v("/* TCP listening port */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" tcp_backlog"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* TCP listen() backlog */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("bindaddr"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONFIG_BINDADDR_MAX"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Addresses we should bind to */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bindaddr_count"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of addresses in server.bindaddr[] */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("unixsocket"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{attrs:{class:"token comment"}},[s._v("/* UNIX socket path */")]),s._v("\n    mode_t unixsocketperm"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* UNIX socket permission */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ipfd"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONFIG_BINDADDR_MAX"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* TCP socket file descriptors */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ipfd_count"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Used slots in ipfd[] */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sofd"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unix socket file descriptor */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cfd"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONFIG_BINDADDR_MAX"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{attrs:{class:"token comment"}},[s._v("/* Cluster bus listening socket */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cfd_count"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),a("span",{attrs:{class:"token comment"}},[s._v("/* Used slots in cfd[] */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("clients"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),a("span",{attrs:{class:"token comment"}},[s._v("/* List of active clients 客户端链表，记录当前连接的客户端状态 */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("clients_to_close"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Clients to close asynchronously */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("clients_pending_write"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* There is to write or install handler. */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("slaves"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("monitors"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* List of slaves and MONITORs */")]),s._v("\n    client "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("current_client"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Current client, only used on crash report */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" clients_paused"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* True if clients are currently paused */")]),s._v("\n    mstime_t clients_pause_end_time"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Time when we undo clients_paused */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" neterr"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ANET_ERR_LEN"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Error buffer for anet.c */")]),s._v("\n    dict "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("migrate_cached_sockets"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{attrs:{class:"token comment"}},[s._v("/* MIGRATE cached sockets */")]),s._v("\n    uint64_t next_client_id"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Next client unique ID. Incremental. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" protected_mode"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* Don't accept external connections. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* RDB / AOF loading information */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" loading"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),a("span",{attrs:{class:"token comment"}},[s._v("/* We are loading data from disk if true */")]),s._v("\n    off_t loading_total_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    off_t loading_loaded_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    time_t loading_start_time"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    off_t loading_process_events_interval_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Fast pointers to often looked up command */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" redisCommand "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("delCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("multiCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("lpushCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("lpopCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                        "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("rpopCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("sremCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("execCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                        "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("expireCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("pexpireCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("xclaimCommand"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Fields used only for stats */")]),s._v("\n    time_t stat_starttime"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Server start time */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_numcommands"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of processed commands */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_numconnections"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of connections received */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_expiredkeys"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of expired keys */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("double")]),s._v(" stat_expired_stale_perc"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Percentage of keys probably expired */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_expired_time_cap_reached_count"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Early expire cylce stops.*/")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_evictedkeys"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of evicted keys (maxmemory) */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_keyspace_hits"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of successful lookups of keys */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_keyspace_misses"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of failed lookups of keys */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_active_defrag_hits"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* number of allocations moved */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_active_defrag_misses"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* number of allocations scanned but not moved */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_active_defrag_key_hits"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* number of keys with moved allocations */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_active_defrag_key_misses"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{attrs:{class:"token comment"}},[s._v("/* number of keys scanned and not moved */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_active_defrag_scanned"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* number of dictEntries scanned */")]),s._v("\n    size_t stat_peak_memory"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* Max used memory record */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_fork_time"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* Time needed to perform latest fork() */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("double")]),s._v(" stat_fork_rate"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Fork rate in GB/sec. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_rejected_conn"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Clients rejected because of maxclients */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_sync_full"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of full resyncs with slaves. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_sync_partial_ok"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of accepted PSYNC requests. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_sync_partial_err"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of unaccepted PSYNC requests. */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("slowlog"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),a("span",{attrs:{class:"token comment"}},[s._v("/* SLOWLOG list of commands */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" slowlog_entry_id"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* SLOWLOG current entry ID */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" slowlog_log_slower_than"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* SLOWLOG time limit (to get logged) */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" slowlog_max_len"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* SLOWLOG max number of items logged */")]),s._v("\n    malloc_stats cron_malloc_stats"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* sampled in serverCron(). */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_net_input_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Bytes read from network. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stat_net_output_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Bytes written to network. */")]),s._v("\n    size_t stat_rdb_cow_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* Copy on write bytes during RDB saving. */")]),s._v("\n    size_t stat_aof_cow_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* Copy on write bytes during AOF rewrite. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* The following two are used to track instantaneous metrics, like\n     * number of operations per second, network traffic. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" last_sample_time"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Timestamp of last sample in ms */")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" last_sample_count"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{attrs:{class:"token comment"}},[s._v("/* Count in last sample */")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" samples"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("STATS_METRIC_SAMPLES"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" idx"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" inst_metric"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("STATS_METRIC_COUNT"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Configuration */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" verbosity"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Loglevel in redis.conf */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxidletime"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),a("span",{attrs:{class:"token comment"}},[s._v("/* Client timeout in seconds */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" tcpkeepalive"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),a("span",{attrs:{class:"token comment"}},[s._v("/* Set SO_KEEPALIVE if non-zero. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" active_expire_enabled"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* Can be disabled for testing purposes. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" active_defrag_enabled"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t active_defrag_ignore_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* minimum amount of fragmentation waste to start active defrag */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" active_defrag_threshold_lower"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* minimum percentage of fragmentation to start active defrag */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" active_defrag_threshold_upper"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* maximum percentage of fragmentation at which we use maximum effort */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" active_defrag_cycle_min"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* minimal effort for defrag in CPU percentage */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" active_defrag_cycle_max"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* maximal effort for defrag in CPU percentage */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" active_defrag_max_scan_fields"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* maximum number of fields of set/hash/zset/list to process from within the main dict scan */")]),s._v("\n    size_t client_max_querybuf_len"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Limit for client query buffer length */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" dbnum"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                      "),a("span",{attrs:{class:"token comment"}},[s._v("/* Total number of configured DBs 服务器数据库的数量 */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" supervised"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),a("span",{attrs:{class:"token comment"}},[s._v("/* 1 if supervised, 0 otherwise. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" supervised_mode"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* See SUPERVISED_* */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" daemonize"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),a("span",{attrs:{class:"token comment"}},[s._v("/* True if running as a daemon */")]),s._v("\n    clientBufferLimitsConfig client_obuf_limits"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CLIENT_TYPE_OBUF_COUNT"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* AOF persistence */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_state"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),a("span",{attrs:{class:"token comment"}},[s._v("/* AOF_(ON|OFF|WAIT_REWRITE) */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_fsync"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Kind of fsync() policy */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("aof_filename"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Name of the AOF file */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_no_fsync_on_rewrite"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Don't fsync if a rewrite is in prog. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_rewrite_perc"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{attrs:{class:"token comment"}},[s._v("/* Rewrite AOF if % growth is > M and... */")]),s._v("\n    off_t aof_rewrite_min_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* the AOF file is at least N bytes. */")]),s._v("\n    off_t aof_rewrite_base_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* AOF size on latest startup or rewrite. */")]),s._v("\n    off_t aof_current_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* AOF current size. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_rewrite_scheduled"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* Rewrite once BGSAVE terminates. */")]),s._v("\n    pid_t aof_child_pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* PID if rewriting process */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("aof_rewrite_buf_blocks"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Hold changes during an AOF rewrite. */")]),s._v("\n    sds aof_buf"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* AOF buffer, written before entering the event loop */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_fd"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* File descriptor of currently selected AOF file */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_selected_db"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Currently selected DB in AOF */")]),s._v("\n    time_t aof_flush_postponed_start"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* UNIX time of postponed AOF flush */")]),s._v("\n    time_t aof_last_fsync"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* UNIX time of last fsync() */")]),s._v("\n    time_t aof_rewrite_time_last"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Time used by last AOF rewrite run. */")]),s._v("\n    time_t aof_rewrite_time_start"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Current AOF rewrite start time. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_lastbgrewrite_status"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* C_OK or C_ERR */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" aof_delayed_fsync"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* delayed AOF fsync() counter */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_rewrite_incremental_fsync"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{attrs:{class:"token comment"}},[s._v("/* fsync incrementally while rewriting? */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_last_write_status"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* C_OK or C_ERR */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_last_write_errno"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* Valid if aof_last_write_status is ERR */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_load_truncated"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* Don't stop on unexpected AOF EOF. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_use_rdb_preamble"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* Use RDB preamble on AOF rewrites. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* AOF pipes used to communicate between parent and child during rewrite. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_pipe_write_data_to_child"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_pipe_read_data_from_parent"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_pipe_write_ack_to_parent"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_pipe_read_ack_from_child"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_pipe_write_ack_to_child"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_pipe_read_ack_from_parent"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aof_stop_sending_diff"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* If true stop sending accumulated diffs\n                                      to child process. */")]),s._v("\n    sds aof_child_diff"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* AOF diff accumulator child side. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* RDB persistence */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" dirty"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),a("span",{attrs:{class:"token comment"}},[s._v("/* Changes to DB from the last save */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" dirty_before_bgsave"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Used to restore dirty on failed BGSAVE */")]),s._v("\n    pid_t rdb_child_pid"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* PID of RDB saving child */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" saveparam "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("saveparams"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Save points array for RDB */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" saveparamslen"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of saving points */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("rdb_filename"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Name of RDB file */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" rdb_compression"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* Use compression in RDB? */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" rdb_checksum"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),a("span",{attrs:{class:"token comment"}},[s._v("/* Use RDB checksum? */")]),s._v("\n    time_t lastsave"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unix time of last successful save */")]),s._v("\n    time_t lastbgsave_try"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unix time of last attempted bgsave */")]),s._v("\n    time_t rdb_save_time_last"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* Time used by last RDB save run. */")]),s._v("\n    time_t rdb_save_time_start"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Current RDB save start time. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" rdb_bgsave_scheduled"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{attrs:{class:"token comment"}},[s._v("/* BGSAVE when possible if true. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" rdb_child_type"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Type of save by active child. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lastbgsave_status"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* C_OK or C_ERR */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" stop_writes_on_bgsave_err"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Don't allow writes if can't BGSAVE */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" rdb_pipe_write_result_to_parent"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* RDB pipes used to return the state */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" rdb_pipe_read_result_from_child"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* of each slave in diskless SYNC. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Pipe and data structures for child -> parent info sharing. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" child_info_pipe"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("2")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* Pipe used to write the child_info_data. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" process_type"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{attrs:{class:"token comment"}},[s._v("/* AOF or RDB child? */")]),s._v("\n        size_t cow_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* Copy on write size. */")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" magic"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Magic value to make sure data is valid. */")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" child_info_data"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Propagation of commands in AOF / replication */")]),s._v("\n    redisOpArray also_propagate"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Additional command to propagate. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Logging */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("logfile"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Path of log file */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" syslog_enabled"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Is syslog enabled? */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("syslog_ident"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Syslog ident */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" syslog_facility"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* Syslog facility */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Replication (master) */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" replid"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONFIG_RUN_ID_SIZE"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* My current replication ID. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" replid2"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONFIG_RUN_ID_SIZE"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* replid inherited from master*/")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" master_repl_offset"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* My current replication offset */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" second_replid_offset"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Accept offsets up to this for replid2. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" slaveseldb"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),a("span",{attrs:{class:"token comment"}},[s._v("/* Last SELECTed DB in replication output */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_ping_slave_period"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Master pings the slave every N seconds */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("repl_backlog"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Replication backlog for partial syncs */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" repl_backlog_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Backlog circular buffer size */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" repl_backlog_histlen"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Backlog actual data length */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" repl_backlog_idx"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Backlog circular buffer current offset,\n                                       that is the next byte will'll write to.*/")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" repl_backlog_off"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v('/* Replication "master offset" of first\n                                       byte in the replication backlog buffer.*/')]),s._v("\n    time_t repl_backlog_time_limit"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Time without slaves after the backlog\n                                       gets released. */")]),s._v("\n    time_t repl_no_slaves_since"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* We have no slaves since that time.\n                                       Only valid if server.slaves len is 0. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_min_slaves_to_write"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Min number of slaves to write. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_min_slaves_max_lag"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Max lag of <count> slaves to write. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_good_slaves_count"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Number of slaves with lag <= max_lag. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_diskless_sync"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* Send RDB to slaves sockets directly. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_diskless_sync_delay"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Delay to start a diskless repl BGSAVE. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Replication (slave) */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("masterauth"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),a("span",{attrs:{class:"token comment"}},[s._v("/* AUTH with this password with master */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("masterhost"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),a("span",{attrs:{class:"token comment"}},[s._v("/* Hostname of master */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" masterport"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),a("span",{attrs:{class:"token comment"}},[s._v("/* Port of master */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_timeout"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),a("span",{attrs:{class:"token comment"}},[s._v("/* Timeout after N seconds of master idle */")]),s._v("\n    client "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("master"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Client that is master for this slave */")]),s._v("\n    client "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("cached_master"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Cached master to be reused for PSYNC. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_syncio_timeout"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Timeout for synchronous I/O calls */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_state"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Replication status if the instance is a slave */")]),s._v("\n    off_t repl_transfer_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Size of RDB to read from master during sync. */")]),s._v("\n    off_t repl_transfer_read"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Amount of RDB read from master during sync. */")]),s._v("\n    off_t repl_transfer_last_fsync_off"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Offset when we fsync-ed last time. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_transfer_s"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* Slave -> Master SYNC socket */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_transfer_fd"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Slave -> Master SYNC temp file descriptor */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("repl_transfer_tmpfile"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Slave-> master SYNC temp file name */")]),s._v("\n    time_t repl_transfer_lastio"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unix time of the latest read, for timeout */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_serve_stale_data"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Serve stale data when link is down? */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_slave_ro"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Slave is read only? */")]),s._v("\n    time_t repl_down_since"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unix time at which link with master went down */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_disable_tcp_nodelay"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Disable TCP_NODELAY after SYNC? */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" slave_priority"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* Reported in INFO and used by Sentinel. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" slave_announce_port"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* Give the master this listening port. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("slave_announce_ip"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* Give the master this ip address. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* The following two fields is where we store master PSYNC replid/offset\n     * while the PSYNC is in progress. At the end we'll copy the fields into\n     * the server->master client structure. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" master_replid"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONFIG_RUN_ID_SIZE"),a("span",{attrs:{class:"token operator"}},[s._v("+")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Master PSYNC runid. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" master_initial_offset"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{attrs:{class:"token comment"}},[s._v("/* Master PSYNC offset. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_slave_lazy_flush"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Lazy FLUSHALL before loading DB? */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Replication script cache. */")]),s._v("\n    dict "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("repl_scriptcache_dict"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* SHA1 all slaves are aware of. */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("repl_scriptcache_fifo"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* First in, first out LRU eviction. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" repl_scriptcache_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Max number of elements. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Synchronous replication. */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("clients_waiting_acks"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* Clients waiting in WAIT command. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" get_ack_from_slaves"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* If true we send REPLCONF GETACK. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Limits */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxclients"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{attrs:{class:"token comment"}},[s._v("/* Max number of simultaneous clients */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" maxmemory"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Max number of memory bytes to use */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxmemory_policy"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{attrs:{class:"token comment"}},[s._v("/* Policy for key eviction */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxmemory_samples"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{attrs:{class:"token comment"}},[s._v("/* Pricision of random sampling */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lfu_log_factor"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* LFU logarithmic counter factor. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lfu_decay_time"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{attrs:{class:"token comment"}},[s._v("/* LFU counter decay factor. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" proto_max_bulk_len"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Protocol bulk length maximum size. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Blocked clients */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" blocked_clients"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* # of clients executing a blocking cmd.*/")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" blocked_clients_by_type"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("BLOCKED_NUM"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("unblocked_clients"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* list of clients to unblock before next loop */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("ready_keys"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{attrs:{class:"token comment"}},[s._v("/* List of readyList structures for BLPOP & co */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Sort parameters - qsort_r() is only available under BSD so we\n     * have to take this state global, in order to pass it to sortCompare() */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sort_desc"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sort_alpha"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sort_bypattern"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sort_store"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Zip structure config, see redis.conf for more information  */")]),s._v("\n    size_t hash_max_ziplist_entries"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t hash_max_ziplist_value"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t set_max_intset_entries"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t zset_max_ziplist_entries"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t zset_max_ziplist_value"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    size_t hll_sparse_max_bytes"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* List parameters */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" list_max_ziplist_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" list_compress_depth"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* time cache */")]),s._v("\n    time_t unixtime"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Unix time sampled every cron cycle. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" mstime"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* Like 'unixtime' but with milliseconds resolution. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Pubsub */")]),s._v("\n    dict "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("pubsub_channels"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Map channels to list of subscribed clients */")]),s._v("\n    list "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("pubsub_patterns"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* A list of pubsub_patterns */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" notify_keyspace_events"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Events to propagate via Pub/Sub. This is an\n                                   xor of NOTIFY_... flags. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Cluster */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cluster_enabled"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{attrs:{class:"token comment"}},[s._v("/* Is cluster enabled? */")]),s._v("\n    mstime_t cluster_node_timeout"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Cluster node timeout. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("cluster_configfile"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Cluster auto-generated config file name. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" clusterState "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("cluster"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* State of the cluster */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cluster_migration_barrier"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Cluster replicas migration barrier. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cluster_slave_validity_factor"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Slave max data age for failover. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cluster_require_full_coverage"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* If true, put the cluster down if\n                                          there is at least an uncovered slot.*/")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cluster_slave_no_failover"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Prevent slave from starting a failover\n                                       if the master is in failure state. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("cluster_announce_ip"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* IP address to announce on cluster bus. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cluster_announce_port"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* base port to announce on cluster bus. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cluster_announce_bus_port"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* bus port to announce on cluster bus. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Scripting */")]),s._v("\n    lua_State "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("lua"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* The Lua interpreter. We use just one for all clients */")]),s._v("\n    client "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("lua_client"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v('/* The "fake client" to query Redis from Lua, 用于执行lua脚本的伪客户端 */')]),s._v("\n    client "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("lua_caller"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{attrs:{class:"token comment"}},[s._v("/* The client running EVAL right now, or NULL */")]),s._v("\n    dict "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("lua_scripts"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* A dictionary of SHA1 -> Lua scripts */")]),s._v("\n    mstime_t lua_time_limit"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Script timeout in milliseconds */")]),s._v("\n    mstime_t lua_time_start"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Start time of script, milliseconds time */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lua_write_dirty"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* True if a write command was called during the\n                             execution of the current script. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lua_random_dirty"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* True if a random command was called during the\n                             execution of the current script. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lua_replicate_commands"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* True if we are doing single commands repl. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lua_multi_emitted"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{attrs:{class:"token comment"}},[s._v("/* True if we already proagated MULTI. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lua_repl"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* Script replication flags for redis.set_repl(). */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lua_timedout"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{attrs:{class:"token comment"}},[s._v("/* True if we reached the time limit for script\n                             execution. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lua_kill"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),a("span",{attrs:{class:"token comment"}},[s._v("/* Kill the script if true. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lua_always_replicate_commands"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Default replication type. */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Lazy free */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lazyfree_lazy_eviction"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lazyfree_lazy_expire"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" lazyfree_lazy_server_del"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Latency monitor */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("long")]),s._v(" latency_monitor_threshold"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    dict "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("latency_events"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Assert & bug reporting */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("assert_failed"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("assert_file"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" assert_line"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bug_report_start"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* True if bug report header was already logged. */")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" watchdog_period"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Software watchdog period in ms. 0 = off */")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* System hardware info */")]),s._v("\n    size_t system_memory_size"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("/* Total memory in system as reported by OS */")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/* Mutexes used to protect atomic variables when atomic builtins are\n     * not available. */")]),s._v("\n    pthread_mutex_t lruclock_mutex"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    pthread_mutex_t next_client_id_mutex"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    pthread_mutex_t unixtime_mutex"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br"),a("span",{staticClass:"line-number"},[s._v("155")]),a("br"),a("span",{staticClass:"line-number"},[s._v("156")]),a("br"),a("span",{staticClass:"line-number"},[s._v("157")]),a("br"),a("span",{staticClass:"line-number"},[s._v("158")]),a("br"),a("span",{staticClass:"line-number"},[s._v("159")]),a("br"),a("span",{staticClass:"line-number"},[s._v("160")]),a("br"),a("span",{staticClass:"line-number"},[s._v("161")]),a("br"),a("span",{staticClass:"line-number"},[s._v("162")]),a("br"),a("span",{staticClass:"line-number"},[s._v("163")]),a("br"),a("span",{staticClass:"line-number"},[s._v("164")]),a("br"),a("span",{staticClass:"line-number"},[s._v("165")]),a("br"),a("span",{staticClass:"line-number"},[s._v("166")]),a("br"),a("span",{staticClass:"line-number"},[s._v("167")]),a("br"),a("span",{staticClass:"line-number"},[s._v("168")]),a("br"),a("span",{staticClass:"line-number"},[s._v("169")]),a("br"),a("span",{staticClass:"line-number"},[s._v("170")]),a("br"),a("span",{staticClass:"line-number"},[s._v("171")]),a("br"),a("span",{staticClass:"line-number"},[s._v("172")]),a("br"),a("span",{staticClass:"line-number"},[s._v("173")]),a("br"),a("span",{staticClass:"line-number"},[s._v("174")]),a("br"),a("span",{staticClass:"line-number"},[s._v("175")]),a("br"),a("span",{staticClass:"line-number"},[s._v("176")]),a("br"),a("span",{staticClass:"line-number"},[s._v("177")]),a("br"),a("span",{staticClass:"line-number"},[s._v("178")]),a("br"),a("span",{staticClass:"line-number"},[s._v("179")]),a("br"),a("span",{staticClass:"line-number"},[s._v("180")]),a("br"),a("span",{staticClass:"line-number"},[s._v("181")]),a("br"),a("span",{staticClass:"line-number"},[s._v("182")]),a("br"),a("span",{staticClass:"line-number"},[s._v("183")]),a("br"),a("span",{staticClass:"line-number"},[s._v("184")]),a("br"),a("span",{staticClass:"line-number"},[s._v("185")]),a("br"),a("span",{staticClass:"line-number"},[s._v("186")]),a("br"),a("span",{staticClass:"line-number"},[s._v("187")]),a("br"),a("span",{staticClass:"line-number"},[s._v("188")]),a("br"),a("span",{staticClass:"line-number"},[s._v("189")]),a("br"),a("span",{staticClass:"line-number"},[s._v("190")]),a("br"),a("span",{staticClass:"line-number"},[s._v("191")]),a("br"),a("span",{staticClass:"line-number"},[s._v("192")]),a("br"),a("span",{staticClass:"line-number"},[s._v("193")]),a("br"),a("span",{staticClass:"line-number"},[s._v("194")]),a("br"),a("span",{staticClass:"line-number"},[s._v("195")]),a("br"),a("span",{staticClass:"line-number"},[s._v("196")]),a("br"),a("span",{staticClass:"line-number"},[s._v("197")]),a("br"),a("span",{staticClass:"line-number"},[s._v("198")]),a("br"),a("span",{staticClass:"line-number"},[s._v("199")]),a("br"),a("span",{staticClass:"line-number"},[s._v("200")]),a("br"),a("span",{staticClass:"line-number"},[s._v("201")]),a("br"),a("span",{staticClass:"line-number"},[s._v("202")]),a("br"),a("span",{staticClass:"line-number"},[s._v("203")]),a("br"),a("span",{staticClass:"line-number"},[s._v("204")]),a("br"),a("span",{staticClass:"line-number"},[s._v("205")]),a("br"),a("span",{staticClass:"line-number"},[s._v("206")]),a("br"),a("span",{staticClass:"line-number"},[s._v("207")]),a("br"),a("span",{staticClass:"line-number"},[s._v("208")]),a("br"),a("span",{staticClass:"line-number"},[s._v("209")]),a("br"),a("span",{staticClass:"line-number"},[s._v("210")]),a("br"),a("span",{staticClass:"line-number"},[s._v("211")]),a("br"),a("span",{staticClass:"line-number"},[s._v("212")]),a("br"),a("span",{staticClass:"line-number"},[s._v("213")]),a("br"),a("span",{staticClass:"line-number"},[s._v("214")]),a("br"),a("span",{staticClass:"line-number"},[s._v("215")]),a("br"),a("span",{staticClass:"line-number"},[s._v("216")]),a("br"),a("span",{staticClass:"line-number"},[s._v("217")]),a("br"),a("span",{staticClass:"line-number"},[s._v("218")]),a("br"),a("span",{staticClass:"line-number"},[s._v("219")]),a("br"),a("span",{staticClass:"line-number"},[s._v("220")]),a("br"),a("span",{staticClass:"line-number"},[s._v("221")]),a("br"),a("span",{staticClass:"line-number"},[s._v("222")]),a("br"),a("span",{staticClass:"line-number"},[s._v("223")]),a("br"),a("span",{staticClass:"line-number"},[s._v("224")]),a("br"),a("span",{staticClass:"line-number"},[s._v("225")]),a("br"),a("span",{staticClass:"line-number"},[s._v("226")]),a("br"),a("span",{staticClass:"line-number"},[s._v("227")]),a("br"),a("span",{staticClass:"line-number"},[s._v("228")]),a("br"),a("span",{staticClass:"line-number"},[s._v("229")]),a("br"),a("span",{staticClass:"line-number"},[s._v("230")]),a("br"),a("span",{staticClass:"line-number"},[s._v("231")]),a("br"),a("span",{staticClass:"line-number"},[s._v("232")]),a("br"),a("span",{staticClass:"line-number"},[s._v("233")]),a("br"),a("span",{staticClass:"line-number"},[s._v("234")]),a("br"),a("span",{staticClass:"line-number"},[s._v("235")]),a("br"),a("span",{staticClass:"line-number"},[s._v("236")]),a("br"),a("span",{staticClass:"line-number"},[s._v("237")]),a("br"),a("span",{staticClass:"line-number"},[s._v("238")]),a("br"),a("span",{staticClass:"line-number"},[s._v("239")]),a("br"),a("span",{staticClass:"line-number"},[s._v("240")]),a("br"),a("span",{staticClass:"line-number"},[s._v("241")]),a("br"),a("span",{staticClass:"line-number"},[s._v("242")]),a("br"),a("span",{staticClass:"line-number"},[s._v("243")]),a("br"),a("span",{staticClass:"line-number"},[s._v("244")]),a("br"),a("span",{staticClass:"line-number"},[s._v("245")]),a("br"),a("span",{staticClass:"line-number"},[s._v("246")]),a("br"),a("span",{staticClass:"line-number"},[s._v("247")]),a("br"),a("span",{staticClass:"line-number"},[s._v("248")]),a("br"),a("span",{staticClass:"line-number"},[s._v("249")]),a("br"),a("span",{staticClass:"line-number"},[s._v("250")]),a("br"),a("span",{staticClass:"line-number"},[s._v("251")]),a("br"),a("span",{staticClass:"line-number"},[s._v("252")]),a("br"),a("span",{staticClass:"line-number"},[s._v("253")]),a("br"),a("span",{staticClass:"line-number"},[s._v("254")]),a("br"),a("span",{staticClass:"line-number"},[s._v("255")]),a("br"),a("span",{staticClass:"line-number"},[s._v("256")]),a("br"),a("span",{staticClass:"line-number"},[s._v("257")]),a("br"),a("span",{staticClass:"line-number"},[s._v("258")]),a("br"),a("span",{staticClass:"line-number"},[s._v("259")]),a("br"),a("span",{staticClass:"line-number"},[s._v("260")]),a("br"),a("span",{staticClass:"line-number"},[s._v("261")]),a("br"),a("span",{staticClass:"line-number"},[s._v("262")]),a("br"),a("span",{staticClass:"line-number"},[s._v("263")]),a("br"),a("span",{staticClass:"line-number"},[s._v("264")]),a("br"),a("span",{staticClass:"line-number"},[s._v("265")]),a("br"),a("span",{staticClass:"line-number"},[s._v("266")]),a("br"),a("span",{staticClass:"line-number"},[s._v("267")]),a("br"),a("span",{staticClass:"line-number"},[s._v("268")]),a("br"),a("span",{staticClass:"line-number"},[s._v("269")]),a("br"),a("span",{staticClass:"line-number"},[s._v("270")]),a("br"),a("span",{staticClass:"line-number"},[s._v("271")]),a("br"),a("span",{staticClass:"line-number"},[s._v("272")]),a("br"),a("span",{staticClass:"line-number"},[s._v("273")]),a("br"),a("span",{staticClass:"line-number"},[s._v("274")]),a("br"),a("span",{staticClass:"line-number"},[s._v("275")]),a("br"),a("span",{staticClass:"line-number"},[s._v("276")]),a("br"),a("span",{staticClass:"line-number"},[s._v("277")]),a("br"),a("span",{staticClass:"line-number"},[s._v("278")]),a("br"),a("span",{staticClass:"line-number"},[s._v("279")]),a("br"),a("span",{staticClass:"line-number"},[s._v("280")]),a("br"),a("span",{staticClass:"line-number"},[s._v("281")]),a("br"),a("span",{staticClass:"line-number"},[s._v("282")]),a("br"),a("span",{staticClass:"line-number"},[s._v("283")]),a("br"),a("span",{staticClass:"line-number"},[s._v("284")]),a("br"),a("span",{staticClass:"line-number"},[s._v("285")]),a("br"),a("span",{staticClass:"line-number"},[s._v("286")]),a("br"),a("span",{staticClass:"line-number"},[s._v("287")]),a("br"),a("span",{staticClass:"line-number"},[s._v("288")]),a("br"),a("span",{staticClass:"line-number"},[s._v("289")]),a("br"),a("span",{staticClass:"line-number"},[s._v("290")]),a("br"),a("span",{staticClass:"line-number"},[s._v("291")]),a("br"),a("span",{staticClass:"line-number"},[s._v("292")]),a("br"),a("span",{staticClass:"line-number"},[s._v("293")]),a("br"),a("span",{staticClass:"line-number"},[s._v("294")]),a("br"),a("span",{staticClass:"line-number"},[s._v("295")]),a("br"),a("span",{staticClass:"line-number"},[s._v("296")]),a("br"),a("span",{staticClass:"line-number"},[s._v("297")]),a("br"),a("span",{staticClass:"line-number"},[s._v("298")]),a("br"),a("span",{staticClass:"line-number"},[s._v("299")]),a("br"),a("span",{staticClass:"line-number"},[s._v("300")]),a("br"),a("span",{staticClass:"line-number"},[s._v("301")]),a("br"),a("span",{staticClass:"line-number"},[s._v("302")]),a("br"),a("span",{staticClass:"line-number"},[s._v("303")]),a("br"),a("span",{staticClass:"line-number"},[s._v("304")]),a("br"),a("span",{staticClass:"line-number"},[s._v("305")]),a("br"),a("span",{staticClass:"line-number"},[s._v("306")]),a("br"),a("span",{staticClass:"line-number"},[s._v("307")]),a("br"),a("span",{staticClass:"line-number"},[s._v("308")]),a("br"),a("span",{staticClass:"line-number"},[s._v("309")]),a("br"),a("span",{staticClass:"line-number"},[s._v("310")]),a("br"),a("span",{staticClass:"line-number"},[s._v("311")]),a("br"),a("span",{staticClass:"line-number"},[s._v("312")]),a("br"),a("span",{staticClass:"line-number"},[s._v("313")]),a("br"),a("span",{staticClass:"line-number"},[s._v("314")]),a("br"),a("span",{staticClass:"line-number"},[s._v("315")]),a("br"),a("span",{staticClass:"line-number"},[s._v("316")]),a("br"),a("span",{staticClass:"line-number"},[s._v("317")]),a("br"),a("span",{staticClass:"line-number"},[s._v("318")]),a("br"),a("span",{staticClass:"line-number"},[s._v("319")]),a("br"),a("span",{staticClass:"line-number"},[s._v("320")]),a("br"),a("span",{staticClass:"line-number"},[s._v("321")]),a("br"),a("span",{staticClass:"line-number"},[s._v("322")]),a("br"),a("span",{staticClass:"line-number"},[s._v("323")]),a("br"),a("span",{staticClass:"line-number"},[s._v("324")]),a("br"),a("span",{staticClass:"line-number"},[s._v("325")]),a("br"),a("span",{staticClass:"line-number"},[s._v("326")]),a("br"),a("span",{staticClass:"line-number"},[s._v("327")]),a("br"),a("span",{staticClass:"line-number"},[s._v("328")]),a("br"),a("span",{staticClass:"line-number"},[s._v("329")]),a("br"),a("span",{staticClass:"line-number"},[s._v("330")]),a("br"),a("span",{staticClass:"line-number"},[s._v("331")]),a("br"),a("span",{staticClass:"line-number"},[s._v("332")]),a("br"),a("span",{staticClass:"line-number"},[s._v("333")]),a("br"),a("span",{staticClass:"line-number"},[s._v("334")]),a("br"),a("span",{staticClass:"line-number"},[s._v("335")]),a("br"),a("span",{staticClass:"line-number"},[s._v("336")]),a("br"),a("span",{staticClass:"line-number"},[s._v("337")]),a("br"),a("span",{staticClass:"line-number"},[s._v("338")]),a("br")])]),a("p",[s._v("C文件： "),a("code",[s._v("server.c")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/* Global vars */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" redisServer server"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("/* Server global state */")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])}],!1,null,null,null);e.options.__file="server.md";t.default=e.exports}}]);