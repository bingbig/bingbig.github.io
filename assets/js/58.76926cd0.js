(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{438:function(t,_,e){"use strict";e.r(_);var v=e(0),a=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"natstat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#natstat","aria-hidden":"true"}},[t._v("#")]),t._v(" natstat")]),t._v(" "),e("p",[e("code",[t._v("netstat")]),t._v("命令用来打印Linux中网络系统的状态信息，可让你得知整个Linux系统的网络情况。")]),t._v(" "),e("p",[t._v("netstat的常用的选项如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("选项")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("-a (all)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("显示所有选项")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("-t (tcp)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("仅显示tcp相关选项")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("-u (udp)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("仅显示udp相关选项")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("-l (listen)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("仅列出有在Listen(监听)的服务状态")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("-p (program)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("显示建立相关链接的程序名")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("-r (route)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("显示路由信息，路由表")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("-e  (extend)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("显示扩展信息")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("-c")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("每隔一个固定时间，执行该netstat命令。")])])])]),t._v(" "),e("h4",{attrs:{id:"netstat的常用方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netstat的常用方法","aria-hidden":"true"}},[t._v("#")]),t._v(" netstat的常用方法")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("netstat -p | grep 19626")]),t._v("：得到进程号19626的进程所打开的所有端口")]),t._v(" "),e("li",[e("code",[t._v("netstat -tpl")]),t._v("：查看当前tcp监听端口, 需要显示监听的程序名。")]),t._v(" "),e("li",[e("code",[t._v("netstat -c 2")]),t._v("：隔两秒执行一次netstat，持续输出")])]),t._v(" "),e("h2",{attrs:{id:"补充"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#补充","aria-hidden":"true"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),e("p",[t._v("TCP三次握手和四次挥手的过程和netstat中tcp的各种状态。")]),t._v(" "),e("h4",{attrs:{id:"_1-tcp三次握手的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp三次握手的过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. TCP三次握手的过程")]),t._v(" "),e("ol",[e("li",[t._v("主动连接端发送一个SYN包给被动连接端；")]),t._v(" "),e("li",[t._v("被动连接端收到SYN包后，发送一个带ACK的SYN包给主动连接端。")]),t._v(" "),e("li",[t._v("主动连接端发送一个带ACK标志的包给被动连接端，握手动作完成。")])]),t._v(" "),e("h4",{attrs:{id:"_2-tcp的四次挥手过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-tcp的四次挥手过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. TCP的四次挥手过程")]),t._v(" "),e("ol",[e("li",[t._v("主动关闭端发送一个FIN包给被动关闭端。")]),t._v(" "),e("li",[t._v("被动关闭端收到FIN包后，发送一个ACK包给主动关闭端。")]),t._v(" "),e("li",[t._v("被动关闭端发送了ACK包后，再发送一个FIN包给主动关闭端。")]),t._v(" "),e("li",[t._v("主动关闭端收到FIN包后，发送一个ACK包。当被动关闭端收到ACK后，四次挥手动作完成，连接断开。")])]),t._v(" "),e("h4",{attrs:{id:"_3-netstat中tcp连接对应的各种状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-netstat中tcp连接对应的各种状态","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. netstat中tcp连接对应的各种状态")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("LISTEN")]),t._v("：侦听状态，等待远程机器的连接请求。")]),t._v(" "),e("li",[e("code",[t._v("SYN_SEND")]),t._v("：在TCP三次握手期间，主动连接端发送了SYN包后，进入SYN_SEND状态，等待对方的ACK包。")]),t._v(" "),e("li",[e("code",[t._v("SYN_RECV")]),t._v("：在TCP三次握手期间，主动接收端收到SYN包后，进入SYN_RECV状态。")]),t._v(" "),e("li",[e("code",[t._v("ESTABLISHED")]),t._v("：完成TCP三次握手后，主动连接端进入"),e("code",[t._v("ESTABLISHED")]),t._v("状态。此时，TCP连接已经建立，可以进行通信。")]),t._v(" "),e("li",[e("code",[t._v("FIN_WAIT_1")]),t._v("：在TCP四次挥手时，主动关闭端发送FIN包后，进入"),e("code",[t._v("FIN_WAIT_1")]),t._v("状态。")]),t._v(" "),e("li",[e("code",[t._v("FIN_WAIT_2")]),t._v("：在TCP四次挥手时，主动关闭端收到ACK包后，进入"),e("code",[t._v("FIN_WAIT_2")]),t._v("状态。")]),t._v(" "),e("li",[e("code",[t._v("TIME_WAIT")]),t._v("：在TCP四次挥手时，主动关闭端发送了ACK包之后，进入"),e("code",[t._v("TIME_WAIT")]),t._v("状态，等待最多2MSL时间，让被动关闭端收到ACK包。")]),t._v(" "),e("li",[e("code",[t._v("CLOSING")]),t._v("：在TCP四次挥手期间，主动关闭端发送了FIN包后，没有收到对应的ACK包，却收到了对方的FIN包，此时进入"),e("code",[t._v("CLOSING")]),t._v("状态。")]),t._v(" "),e("li",[e("code",[t._v("CLOSE_WAIT")]),t._v("：在TCP四次挥手期间，被动关闭端收到FIN包后，进入"),e("code",[t._v("CLOSE_WAIT")]),t._v("状态。")]),t._v(" "),e("li",[e("code",[t._v("LAST_ACK")]),t._v("：在TCP四次挥手时，被动关闭端发送FIN包后，进入"),e("code",[t._v("LAST_ACK")]),t._v("状态，等待对方的ACK包。")])])])}],!1,null,null,null);a.options.__file="netstat.md";_.default=a.exports}}]);